version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: auth_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: appuser
      MONGO_INITDB_ROOT_PASSWORD: apppass
      MONGO_INITDB_DATABASE: auth_db
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - auth_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Node.js API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://appuser:apppass@mongodb:27017/auth_db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production-minimum-32-characters
      JWT_EXPIRE: 24h
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - auth_network
    # healthcheck:
    #   test: ["CMD", "node", "dist/utils/healthcheck.js"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

volumes:
  mongodb_data:
    driver: local

networks:
  auth_network:
    driver: bridge